{
  "name": "flatdoc",
  "description": "Fetch Markdown files and render them as full pages.",
  "keywords": [
    "documentation",
    "markdown"
  ],
  "author": {
    "name": "Rico Sta. Cruz",
    "email": "hi@ricostacruz.com"
  },
  "version": "0.8.5",
  "repository": {
    "type": "git",
    "url": "https://github.com/rstacruz/flatdoc.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "main": "flatdoc.js",
  "devDependencies": {
    "mocha": "1.10.0",
    "chai": "1.6.0",
    "jsdom": "*",
    "uglify-js": "2.3.6",
    "stylus": "0.46.3",
    "nib": "0.9.1",
    "commander": "1.1.1",
    "dox": "0.4.3"
  },
  "readme": "Flatdoc\n=======\n\nFlatdoc is a small JavaScript file that fetches Markdown files and renders them\nas full pages. Essentially, it's the easiest\nway to make open source documentation from *Readme* files.\n\n * No server-side components\n * No build process needed\n * Deployable via GitHub Pages\n * Can fetch GitHub Readme files\n * Gorgeous default theme (and it's responsive)\n * Just create an HTML file and deploy!\n\n*Current version: [v/0.8.5][dist]*\n\n[![Build Status](https://travis-ci.org/rstacruz/flatdoc.png?branch=gh-pages)](https://travis-ci.org/rstacruz/flatdoc)\n\nGetting started\n---------------\n\nCreate a file based on the template, which has a bare DOM, link to the\nscripts, and a link to a theme. It will look something like this (not exact).\nFor GitHub projects, simply place this file in your [GitHub pages] branch and\nyou're all good to go.\n\n*In short: just download this file and upload it somewhere.*\n\n[Download template >][template]\n\n``` html\n<html>\n  <head>\n    <!-- Flatdoc -->\n    <script src='http://rstacruz.github.io/flatdoc/v/0.8.5/legacy.js'></script>\n    <script src='http://rstacruz.github.io/flatdoc/v/0.8.5/flatdoc.js'></script>\n\n    <!-- Flatdoc theme (optional) -->\n    <link  href='http://rstacruz.github.io/flatdoc/v/0.8.5/theme-white/style.css' rel='stylesheet'>\n    <script src='http://rstacruz.github.io/flatdoc/v/0.8.5/theme-white/script.js'></script>\n\n    <!-- Initializer -->\n    <script>\n      Flatdoc.run({\n        fetcher: Flatdoc.github('USER/REPO')\n      });\n    </script>\n  </head>\n\n  <body role='flatdoc'>\n    <div role='flatdoc-menu'></div>\n    <div role='flatdoc-content'></div>\n  </body>\n</html>\n```\n\n### Via GitHub\n\nTo fetch a Github Repository's readme file, use the `Flatdoc.github` fetcher.\nThis will fetch the Readme file of the repository's default branch.\n\n``` javascript\nFlatdoc.run({\n  fetcher: Flatdoc.github('USER/REPO')\n});\n```\n\nYou may also fetch another file other than the Readme file, just specify it as\nthe 2nd parameter.\n\n``` javascript\nFlatdoc.run({\n  fetcher: Flatdoc.github('USER/REPO', 'Changelog.md')\n});\n```\n\nAfter you've done this, you probably want to deploy it via [GitHub Pages].\n\n[GitHub Pages guide >][GitHub Pages]\n\n### Via a file\n\nYou may also fetch a file. In this example, this fetches the file `Readme.md` in\nthe same folder as the HTML file.\n\n``` javascript\nFlatdoc.run({\n  fetcher: Flatdoc.file('Readme.md')\n});\n```\n\nYou may actually supply any URL here. It will be fetched via AJAX. This is\nuseful for local testing.\n\n``` javascript\nFlatdoc.run({\n  fetcher: Flatdoc.file('http://yoursite.com/Readme.md')\n});\n```\n\nHow it works\n------------\n\nFlatdoc is a hosted `.js` file (along with a theme and its assets) that you can\nadd into any page hosted anywhere.\n\n#### All client-side\n\nThere are no build scripts or 3rd-party services involved. Everything is done in\nthe browser. Worried about performance? Oh, It's pretty fast.\n\nFlatdoc utilizes the [GitHub API] to fetch your project's Readme files. You may\nalso configure it to fetch any arbitrary URL via AJAX.\n\n#### Lightning-fast parsing\n\nNext, it uses [marked], an extremely fast Markdown parser that has support for\nGitHub flavored Markdown.\n\nFlatdoc then simply renders *menu* and *content* DOM elements to your HTML\ndocument. Flatdoc also comes with a default theme to style your page for you, or\nyou may opt to create your own styles.\n\nMarkdown extras\n---------------\n\nFlatdoc offers a few harmless, unobtrusive extras that come in handy in building\ndocumentation sites.\n\n#### Code highlighting\n\nYou can use Markdown code fences to make syntax-highlighted text. Simply\nsurround your text with three backticks. This works in GitHub as well.\nSee [GitHub Syntax Highlighting][fences] for more info.\n\n    ``` html\n    <strong>Hola, mundo</strong>\n    ```\n\n#### Blockquotes\n\nBlockquotes show up as side figures. This is useful for providing side\ninformation or non-code examples.\n\n> Blockquotes are blocks that begin with `>`.\n\n#### Smart quotes\n\nSingle quotes, double quotes, and double-hyphens are automatically replaced to\ntheir typographically-accurate equivalent. This, of course, does not apply to\n`<code>` and `<pre>` blocks to leave code alone.\n\n> \"From a certain point onward there is no longer any turning back. That is the\n> point that must be reached.\"  \n> --Franz Kafka\n\n#### Buttons\n\nIf your link text has a `>` at the end (for instance: `Continue >`), they show\nup as buttons.\n\n> [View in GitHub >][project]\n\nCustomizing\n===========\n\nBasic\n-----\n\n### Theme options\n\nFor the default theme (*theme-white*), You can set theme options by adding\nclasses to the `<body>` element. The available options are:\n\n#### big-h3\nMakes 3rd-level headings bigger.\n\n``` html\n<body class='big-h3'>\n```\n\n#### no-literate\nDisables \"literate\" mode, where code appears on the right and content text\nappear on the left.\n\n``` html\n<body class='no-literate'>\n```\n\n#### large-brief\nMakes the opening paragraph large.\n\n``` html\n<body class='large-brief'>\n```\n\n### Adding more markup\n\nYou have full control over the HTML file, just add markup wherever you see fit.\nAs long as you leave `role='flatdoc-content'` and `role='flatdoc-menu'` empty as\nthey are, you'll be fine.\n\nHere are some ideas to get you started.\n\n * Add a CSS file to make your own CSS adjustments.\n * Add a 'Tweet' button on top.\n * Add Google Analytics.\n * Use CSS to style the IDs in menus (`#acknowledgements + p`).\n\n### JavaScript hooks\n\nFlatdoc emits the events `flatdoc:loading` and `flatdoc:ready` to help you make\ncustom behavior when the document loads.\n\n``` js\n$(document).on('flatdoc:ready', function() {\n  // I don't like this section to appear\n  $(\"#acknowledgements\").remove();\n});\n```\n\nFull customization\n------------------\n\nYou don't have to be restricted to the given theme. Flatdoc is just really one\n`.js` file that expects 2 HTML elements (for *menu* and *content*). Start with\nthe blank template and customize as you see fit.\n\n[Get blank template >][template]\n\n``` html\n<html>\n  <head>\n    <script src='jquery.js'></script>\n    <script src='http://rstacruz.github.io/flatdoc/v/0.8.5/flatdoc.js'></script>\n    <!-- Initializer -->\n    <script>\n      Flatdoc.run({\n        fetcher: Flatdoc.github('USER/REPO')\n      });\n    </script>\n  </head>\n\n  <body role='flatdoc'>\n    <div role='flatdoc-menu'></div>\n    <div role='flatdoc-content'></div>\n  </body>\n</html>\n```\nMisc\n====\n\nInspirations\n------------\n\nThe following projects have inspired Flatdoc.\n\n * [Backbone.js] - Jeremy's projects have always adopted this \"one page\n documentation\" approach which I really love.\n\n * [Docco] - Jeremy's Docco introduced me to the world of literate programming,\n and side-by-side documentation in general.\n\n * [Stripe] - Flatdoc took inspiration on the look of their API documentation.\n\n * [DocumentUp] - This service has the same idea but does a hosted readme \n parsing approach.\n\nAttributions\n------------\n\n[Photo](http://www.flickr.com/photos/doug88888/2953428679/) taken from Flickr,\nlicensed under Creative Commons.\n\nAcknowledgements\n----------------\n\nÂ© 2013, 2014, Rico Sta. Cruz. Released under the [MIT \nLicense](http://www.opensource.org/licenses/mit-license.php).\n\n**Flatdoc** is authored and maintained by [Rico Sta. Cruz][rsc] with help from its \n[contributors][c].\n\n * [My website](http://ricostacruz.com) (ricostacruz.com)\n * [Github](http://github.com/rstacruz) (@rstacruz)\n * [Twitter](http://twitter.com/rstacruz) (@rstacruz)\n\n[rsc]: http://ricostacruz.com\n[c]:   http://github.com/rstacruz/flatdoc/contributors\n\n[GitHub API]: http://github.com/api\n[marked]: https://github.com/chjj/marked\n[Backbone.js]: http://backbonejs.org\n[dox]: https://github.com/visionmedia/dox\n[Stripe]: https://stripe.com/docs/api\n[Docco]: http://jashkenas.github.com/docco\n[GitHub pages]: https://pages.github.com\n[fences]:https://help.github.com/articles/github-flavored-markdown#syntax-highlighting\n[DocumentUp]: http://documentup.com\n\n[project]: https://github.com/rstacruz/flatdoc\n[template]: https://github.com/rstacruz/flatdoc/raw/gh-pages/templates/template.html\n[blank]: https://github.com/rstacruz/flatdoc/raw/gh-pages/templates/blank.html\n[dist]: https://github.com/rstacruz/flatdoc/tree/gh-pages/v/0.8.5\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/rstacruz/flatdoc/issues"
  },
  "_id": "flatdoc@0.8.5",
  "dist": {
    "shasum": "9f393f1f86cfa710f3b791dda08dd8cb7434fbd7"
  },
  "_from": "flatdoc@",
  "_resolved": "https://registry.npmjs.org/flatdoc/-/flatdoc-0.8.5.tgz"
}
